import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import others.LastFM;

import com.hp.hpl.jena.rdf.model.Model;
import com.hp.hpl.jena.rdf.model.ModelFactory;


public class WriteTriples {
 public static void buildTriples(ArrayList<Object> list){
	Model m=ModelFactory.createDefaultModel();
	for(int i=0;i<list.size(); i++) {
		// I FIRST WRITE CLASSES
		if ( list.get(i).getClass().toString().equals("Class") ) {
			
		}
	}
	
 }
 
 public static void readXML() throws ParserConfigurationException,SAXException, IOException {
	 File xml = new File("cfg/lastFM.xml");
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
		Document doc = dBuilder.parse(xml);
		doc.getDocumentElement().normalize();
		LastFM obj=new LastFM();
		//System.out.println("Root element :" + doc.getDocumentElement().getNodeName());		
		
		
		NodeList nList = doc.getElementsByTagName("Class");
		
		String classes[]=new String[nList.getLength()];
		for(int i=0;i<nList.getLength();i++){			
			System.out.println( ((Element) nList.item(i)).getAttribute("id"));
			classes[i]=((Element) nList.item(i)).getAttribute("id");
			ArrayList<String> table=new ArrayList();
			table.add(((Element) nList.item(i)).getAttribute("id"));
		}
		
		
	}
	 
 }

